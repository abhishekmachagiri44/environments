name: Reusable-2 workflow

on:
  workflow_call:
    inputs:
      target-env:
        required: true
        type: string
      # target-ap: 
      #   required: true
      #   type: string
      # target-db: 
      #   required: true
      #   type: string
jobs:
  job1:
    # if: inputs.target-db == ${{ inputs.target-db }}
    runs-on: ${{ inputs.target-env }}
    environment:
      name: ${{ inputs.target-env }}
    # env:
    #   name: ${{vars.RUNNER}}
    steps: 
      - name: var
        if:  inputs.target-env =! 'windows-2019'
        run: echo "${{ inputs.target-env }}"
      - name: "Deploy to dev"
        if:  inputs.target-env =! 'windows-2019'
        run: |
          # Add your deployment script or commands for the chosen environment
          echo "Deploying to ${{ inputs.target-env }} and ${{ inputs.target-env }}"
      - name: var
        if:  inputs.target-env == '${{ inputs.target-env }}'
        run: echo "${{ inputs.target-env }}"
      - name: "Deploy to dev"
        if:  inputs.target-env == '${{ inputs.target-env }}'
        run: |
          # Add your deployment script or commands for the chosen environment
          echo "Deploying to ${{ inputs.target-env }} and ${{ inputs.target-env }}"

  # deploy-ab:
  #   name: Deploy to ${{ inputs.target-env }}
  #   runs-on: ${{ inputs.target-ap }}
    
  #   environment:
  #     name: ${{ inputs.target-env }}
  #   # if: needs.job1.outputs.approved == "${{ inputs.target-env }}"
  #   # continue-on-error: true
  #   # env:
  #   #   name: ${{vars.RUNNER}}
  #   steps: 
  #     - name: var
  #       if: inputs.target-ap == ${{ inputs.target-ap }}
  #       run: echo "${{ inputs.target-ap }}"
  #     - name: "Deploy to Prod"
  #       run: |
  #         # Add your deployment script or commands for the chosen environment
  #         echo "Deploying to ${{ inputs.target-env }} and ${{ inputs.target-ap }}"



# name: Reusable-2 workflow

# on:
#   workflow_call:
#     inputs:
#       target-env:
#         required: true
#         type: string

# jobs:
#   job1:
#     runs-on: ubuntu-latest
#     environment: ${{ inputs.target-env }}
#     outputs:
#       approved: ${{ steps.set-outputs.${{ inputs.target-env }} }}
#     steps:
#       - name: Set outputs
#         id: set-outputs
#         run: |
#           echo "${{ inputs.target-env }}" >> $GITHUB_OUTPUT
#   deploy-ab:
#     name: Deploy to ${{ inputs.target-env }}
#     runs-on: ${{ inputs.target-env }}
#     continue-on-error: true
#     environment:
#       name: ${{ inputs.target-env }}
#       # url: ${{ steps.step_id.outputs.url_output }}
#     env:
#       name: ${{vars.RUNNER}}
#     steps:
#       - run: echo "${{env.name}}"
#       - name: Environment Approval
#         id: approval
#         run: echo "Check approval status"
#       - name: "Deploy to Prod"
#         if: ${{ job1.outputs.approved == '${{ inputs.target-env }}' }}
#         run: |
#           # Add your deployment script or commands for the chosen environment
#           echo "Deploying to ${{ inputs.target-env }} and ${{ inputs.target-env }}"
