# name: Stringified input workflow
# on:
#   workflow_dispatch:
#     inputs:
#       OS:
#         description: provide all OS in stringified array format
#         required: true
#         default: "['ubuntu-latest','windows-latest']"
#       NODE_VERSION:
#         description: provide all node versions in stringified array format
#         required: true
#         default: "['10','16']"
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     name: '${{ matrix.OS }} ${{ matrix.NODE_VERSION }}'
#     strategy:
#       fail-fast: false
#       matrix:
#         OS: ${{ fromJSON(github.event.inputs.OS) }}
#         NODE_VERSION: ${{ fromJSON(github.event.inputs.NODE_VERSION) }}
#     steps:
#       - name: running
#         run: echo "running job with ${{ matrix.OS }} ${{ matrix.NODE_VERSION }}"

# name: build Workflow
# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:
    # inputs:
    #   environment:
    #     description: 'Select environment' 
    #     required: true
    #     type: environment
 
# jobs:
#   build:
#     runs-on: windows-2019
#     # continue-on-error: true
#     steps:
#     - name: build
#       run: |
#         # Add your deployment script or commands for the dev environment
#           echo "build script"


#   build1:
#     needs: build
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ubuntu-latest, windows-latest]
#         node: [14, 16]
#     steps:
#       - uses: actions/checkout@v4
#       - uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node }}

name: Multi-Job Workflow

on:
  push:
    branches:
      - main

env:
  VERSIONS: '[9.0.0, 11.0.0]'

jobs:
  prepare-matrix:
    name: Prepare Matrix Output
    runs-on: ubuntu-latest
    outputs: 
      all_versions: ${{ steps.step1.outputs.matrix }}
    steps: 
      - name: Create Matrix Variable
        id: step1
        run: echo "matrix=$(jq -cr '@json' <<< "$VERSIONS")" >> $GITHUB_OUTPUT

  deploy-gke:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    needs: [prepare-matrix]
    strategy: 
      max-parallel: 2
      matrix: 
        version: ${{ fromJSON(needs.prepare-matrix.outputs.all_versions) }}
    steps:
  #     ...(several steps to complete job)....
  # # run-matrix:
  # #   needs: setup
  # #   runs-on: ubuntu-latest
  # #   strategy:
  # #     matrix: ${{fromJson(needs.setup.outputs.mymatrix)}}
  #   steps:
      - name: Display target
        run: echo ${{ matrix.target }}




      # - name: Extract Runner Names
      #   run: |
      #     runnerNames=$(cat runners.json | jq -r '.runners[].os')
      #     echo "RUNNER_NAMES=$runnerNames" >> $GITHUB_ENV
      #     echo "RUNNER_NAMES_FILE=${{ runner.workspace }}/runner_names" >> $GITHUB_ENV
      #     echo "$runnerNames" > ${{ runner.workspace }}/runner_names
      #     echo "::set-output name=env_file::${{ runner.workspace }}/runner_names"


  # run-matrix:
  #   needs: [matrix]
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include: ${{ fromJson(needs.matrix.outputs.matrix-json) }}
  #   name: "${{ matrix.job_name }}"
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Run Command
  #       shell: pwsh
  #       run: |
  #         Write-Host "Run '${{ matrix.command }}'"










          
  # deploy:
  #   needs: build
  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       include:
  #         - { environment: dev, runner-ap: windows-2019 }
          
  #   uses: ./.github/workflows/deployment2.yml
  #   with:
  #     target-ap: ${{ matrix.runner-ap }}
  #     # target-db: ${{ matrix.runner-db }}
  #     target-env: ${{ matrix.environment }}

  # deplo2:
  #   needs: build
  #   strategy:
  #     # fail-fast: true
  #     matrix:
  #       environment: [windows-latest, ubuntu-latest, windows-2019]
  #       # include:
  #         # - environment: 
  #         #   runner-ap: windows-2019
  #         # - environment: qa
  #         #   runner-ap: windows-2019
  #         #   runner-db: ubuntu-latest
  #         # - { environment: dev, runner-ap: windows-2019 }
  #         # - { environment: qa, runner-ap: windows-2019, runner-db: ubuntu-latest }
  #         # - { environment: dev, runner-ap: windows-2019, runner-db: '' }
  #   uses: ./.github/workflows/deployment2.yml
  #   with:
  #     # target-ap: ${{ matrix.runner-ap }}
  #     # target-db: ${{ matrix.runner-db }}
  #     target-env: ${{ matrix.environment }}

    
  # Deploy-ab:
  #   runs-on: ${{ matrix.target }}
  #   strategy:
  #     matrix:
  #       target: [windows-2019]
  #       runner: [windows-2019]
  #   uses: ./.github/workflows/deployment2.yml
  #   with:
  #     target-env: ${{ matrix.target }}
  #     # target-runner: ${{ matrix.runner }}
  #   secrets: inherit

  # build:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest]
  #       node: [14, 16]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node }}




  # deploy-ab:
  #   needs: build
  #   runs-on: ${{ vars.RUNNER }}
  #   name: Deploy to ${{ vars.ENVIRONMENT }}
  #   strategy:
  #     matrix:
  #       environment: ${{ vars.ENVIRONMENT }}
  #   # if: needs.job1.outputs.approved == "${{ inputs.target-env }}"
  #   # continue-on-error: true
  #   environment:
  #     name: ${{matrix.environment}}
  #   steps:
  #     - run: echo "${{matrix.environment}}"
  #     - name: "Deploy to Prod"
  #       run: |
  #         # Add your deployment script or commands for the chosen environment
  #         echo "Deploying to ${{matrix.environment}} "

  # example_matrix:
  #   strategy:
  #     matrix:
  #       os: [windows-latest, ubuntu-latest]
  #       node: [14, 16]
  #   runs-on: ${{ matrix.os }}

# deploy:
#   needs: build
#   strategy:
#     fail-fast: true
#     matrix:
#       environment: ${{ vars.ENVIRONMENT }}
#       runner: ${{ vars.RUNNER }}
#       experimental: [false]
#       include:
#         - { environment: dev, runner-ap: windows-2017 }
#         - { environment: qa, runner-ap: windows-2019 }
#   uses: ./.github/workflows/deployment2.yml
#   with:
#     target-ap: ${{ matrix.runner }}
#     target-env: ${{ matrix.environment }}
            
  # results:
  #   if: ${{ always() }}
  #   runs-on: ubuntu-latest
  #   name: Final Results
  #   needs: [Deploy]
  #   steps:
  #     - run: exit 1
  #       # see https://stackoverflow.com/a/67532120/4907315
  #       if: >-
  #         ${{
  #              contains(needs.*.result, 'failure')
  #           || contains(needs.*.result, 'cancelled')
  #           || contains(needs.*.result, 'skipped')
  #         }}


  # Deploy-ab:
  #   needs: build
  #   strategy:
  #     matrix:
  #       include:
  #         - { environment: dev, runner-ap: windows-2019, runner-dp: windows-latest }
  #         - { environment: qa, runner-ap: windows-2019, runner-dp: windows-latest } 
          
  #   uses: ./.github/workflows/deployment.yml
  #   with:
  #     target-ap: ${{ matrix.runner-ap }}
  #     target-dp: ${{ matrix.runner-dp }}
  #     target-env: ${{ matrix.environment }}
  # Deploy:
  #   needs: build
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       target: [windows-latest, ubuntu-latest]
  #       experimental: [true]
  #   uses: ./.github/workflows/deployment.yml
  #   with:
  #     target-exp: ${{ matrix.experimental }}
  #     target-env: ${{ matrix.target }}
  #   # secrets: inherit


# deploy-prod:
#     name: Deploy prod
#     needs: build
#     strategy:
#       matrix:
#         include:
#           - environment: windows-latest
#             # url: https://europe.my.service
#           - runner: windows-latest
#           - environment: ubuntu-latest
#             # url: https://europe.my.service
#           - runner: ubuntu-latest
#           # - env:
#           #     name: ${{vars.RUNNER}}
#     environment:
#       # url: ${{ matrix.url }}
#       name: ${{ matrix.environment }}
#     steps:
#     - name: deploy
#       uses: ./.github/workflows/deployment.yml
#       with:
#         # version: ${{ needs.deploy-staging.outputs.version }}
#         target-env: ${{ matrix.environment }}
#         target-runner: ${{ matrix.runner }}






  # Deploy-ab:
  #   needs: build
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       target: [windows-2019]
  #       # runner: [windows-2019]
  #   uses: ./.github/workflows/deployment2.yml
  #   with:
  #     target-env: ${{ matrix.target }}
  #     # target-runner: ${{ matrix.runner }}
  #   secrets: inherit
